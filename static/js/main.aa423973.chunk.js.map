{"version":3,"sources":["Header.js","requests.js","Nav.js","VideoCard.js","axios.js","Results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","API_KEY","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovie","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchMystery","fetchSciFi","fetchWestern","fetchAnimation","fetchTv","Nav","setSelectedOption","onClick","requests","fetchComedyMovies","fetchRomaceMovies","VideoCard","forwardRef","ref","movie","backdrop_path","poster_path","line","element","truncateText","text","overview","title","original_name","vote_count","release_date","first_air_date","ThumbUpSharp","instance","axios","create","baseURL","Results","selectedOption","useState","movies","setMovies","useEffect","a","get","request","console","log","data","results","fetchData","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"maAqDeA,MA3Cf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACG,sBAAKA,UAAU,kCAAf,UACA,cAAC,IAAD,IACA,wCAGA,sBAAKA,UAAU,cAAf,UACA,cAAC,IAAD,IACA,4CAGA,sBAAKA,UAAU,cAAf,UACA,cAAC,IAAD,IACA,4CAGC,sBAAKA,UAAU,cAAf,UACA,cAAC,IAAD,IACA,+CAGA,sBAAKA,UAAU,cAAf,UACA,cAAC,IAAD,IACA,0CAGA,sBAAKA,UAAU,cAAf,UACA,cAAC,IAAD,IACA,8CAIR,qBACIC,IAAI,mEACJC,IAAI,SC/CVC,G,MAAU,oCAED,GACXC,cAAa,qCAAkCD,EAAlC,mBACbE,cAAa,mCAA+BF,EAA/B,mBACbG,kBAAiB,kCAA8BH,EAA9B,mBACjBI,iBAAgB,kCAA8BJ,EAA9B,mBAChBK,kBAAiB,kCAA8BL,EAA9B,mBACjBM,mBAAkB,kCAA8BN,EAA9B,sBAClBO,mBAAkB,kCAA8BP,EAA9B,mBAClBQ,aAAY,kCAA8BR,EAA9B,qBACZS,WAAU,kCAA8BT,EAA9B,oBACVU,aAAY,kCAA8BV,EAA9B,mBACZW,eAAc,kCAA8BX,EAA9B,mBACdY,QAAO,kCAA8BZ,EAA9B,uBCsBIa,MA9Bf,YAAqC,IAAtBC,EAAqB,EAArBA,kBACX,OACA,sBAAKjB,UAAU,MAAf,UACE,oBAAIkB,QAAS,kBAAMD,EAAkBE,EAASf,gBAA9C,sBAGA,oBAAIc,QAAS,kBAAMD,EAAkBE,EAASd,gBAA9C,uBAGA,oBAAIa,QAAS,kBAAMD,EAAkBE,EAASb,oBAA9C,oBAGA,oBAAIY,QAAS,kBAAMD,EAAkBE,EAASC,oBAA9C,oBAGA,oBAAIF,QAAS,kBAAMD,EAAkBE,EAASX,oBAA9C,oBAGA,oBAAIU,QAAS,kBAAMD,EAAkBE,EAASE,oBAA9C,qBAGA,oBAAIH,QAAS,kBAAMD,EAAkBE,EAASR,eAA9C,oBACA,oBAAIO,QAAS,kBAAMD,EAAkBE,EAASP,aAA9C,oBACA,oBAAIM,QAAS,kBAAMD,EAAkBE,EAASN,eAA9C,qBAEA,oBAAIK,QAAS,kBAAMD,EAAkBE,EAASJ,UAA9C,2B,gECASO,EAxBGC,sBAAW,WAAYC,GAAS,IAAlBC,EAAiB,EAAjBA,MAC5B,OACI,sBAAKD,IAAKA,EAAKxB,UAAU,YAAzB,UACI,qBACAC,IAAG,UANE,wCAMF,OAAgBwB,EAAMC,eAAiBD,EAAME,aAChDzB,IAAI,WAEJ,cAAC,IAAD,CACC0B,KAAM,EACNC,QAAQ,IACRC,aAAa,SACbC,KAAMN,EAAMO,WAGb,6BAAKP,EAAMQ,OAASR,EAAMS,gBAC1B,oBAAGlC,UAAU,kBAAb,UACCyB,EAAMU,WACNV,EAAMW,cAAgBX,EAAMY,eAF7B,OAGA,cAACC,EAAA,EAAD,IAAiB,Y,QClBdC,E,OALEC,EAAMC,OAAO,CAC1BC,QAAS,iC,QC+BEC,MA1Bf,YAAoC,IAAlBC,EAAiB,EAAjBA,eAAiB,EACHC,mBAAS,IADN,mBACxBC,EADwB,KAChBC,EADgB,KAa/B,OAVAC,qBAAU,WAAM,4CAEZ,4BAAAC,EAAA,sEAC0BT,EAAMU,IAAIN,GADpC,cACUO,EADV,OAEIC,QAAQC,IAAIF,GACZJ,EAAUI,EAAQG,KAAKC,SAH3B,kBAIWJ,GAJX,4CAFY,uBAAC,WAAD,wBAQZK,KACD,CAACZ,IAEA,qBAAK5C,UAAU,UAAf,SAEA,cAAC,IAAD,UACC8C,EAAOW,KAAI,SAAChC,GAAD,OACZ,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMiC,YCAfC,MAhBf,WAAgB,IAAD,EAC+Bd,mBAAS1B,EAASf,eADjD,mBACNwC,EADM,KACU3B,EADV,KAGb,OACE,sBAAKjB,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAKiB,kBAAmBA,IAExB,cAAC,EAAD,CAAS2B,eAAgBA,QCRhBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa423973.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header_icons\">\r\n               <div className=\"header_icon header_icon--active\">\r\n               <HomeIcon /> \r\n               <p>Home</p>\r\n               </div>\r\n\r\n               <div className=\"header_icon\">\r\n               <FlashOnIcon />\r\n               <p>Trending</p>\r\n               </div>\r\n\r\n               <div className=\"header_icon\">\r\n               <LiveTvIcon />\r\n               <p>Verified</p>\r\n               </div>\r\n               \r\n                <div className=\"header_icon\">\r\n                <VideoLibraryIcon /> \r\n                <p>Collections</p>\r\n                </div>\r\n                \r\n                <div className=\"header_icon\">\r\n                <SearchIcon />\r\n                <p>Search</p>\r\n                </div>\r\n                \r\n                <div className=\"header_icon\">\r\n                <PersonOutlineOutlinedIcon />  \r\n                <p>Account</p>\r\n                </div>\r\n                              \r\n        </div>\r\n        <img \r\n            src=\"https://press.hulu.com/wp-content/uploads/2020/02/hulu-white.png\" \r\n            alt=\"\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","const API_KEY = \"9182da58e8d120bfa24bcd13cb134127\";\r\n\r\nexport default {\r\n    fetchTrending  : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovie : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries : `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchMystery : `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\r\n    fetchSciFi : `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n    fetchWestern : `/discover/movie?api_key=${API_KEY}&with_genres=37`,\r\n    fetchAnimation : `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n    fetchTv : `/discover/movie?api_key=${API_KEY}&with_genres=10770`,\r\n};\r\n   \r\n\r\n\r\n","import React from 'react'\r\n\r\nimport \"./Nav.css\"\r\nimport requests from \"./requests\";\r\n\r\n\r\nfunction Nav({ setSelectedOption }) {\r\n    return (\r\n    <div className=\"nav\">\r\n      <h2 onClick={() => setSelectedOption(requests.fetchTrending)}>\r\n        Trending\r\n      </h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchTopRated)}>\r\n        Top Rated\r\n      </h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchActionMovies)}>\r\n        Action\r\n      </h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchComedyMovies)}>\r\n        Comedy\r\n      </h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchHorrorMovies)}>\r\n        Horrer\r\n      </h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchRomaceMovies)}>\r\n        Romance\r\n      </h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchMystery)}>Mystry</h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchSciFi)}>Sci-fi</h2>\r\n      <h2 onClick={() => setSelectedOption(requests.fetchWestern)}>Western</h2>\r\n\r\n      <h2 onClick={() => setSelectedOption(requests.fetchTv)}>TV Movies</h2>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { forwardRef } from 'react';\r\nimport './VideoCard.css';\r\nimport { ThumbUpSharp } from \"@material-ui/icons\";\r\nimport TextTruncate from \"react-text-truncate\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst VideoCard = forwardRef(({ movie }, ref) => {\r\n    return (\r\n        <div ref={ref} className='videoCard'>\r\n            <img \r\n            src={`${base_url}${movie.backdrop_path || movie.poster_path}`}\r\n            alt=\"poster\" \r\n            />\r\n            <TextTruncate\r\n             line={1}\r\n             element=\"p\"\r\n             truncateText=\"â€¦\"\r\n             text={movie.overview}\r\n            />\r\n            \r\n            <h2>{movie.title || movie.original_name}</h2>\r\n            <p className=\"videoCard_stats\"> \r\n            {movie.vote_count}\r\n            {movie.release_date || movie.first_air_date}....\r\n            <ThumbUpSharp />{\"\"}\r\n            </p>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default VideoCard;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react';\r\nimport './Results.css';\r\nimport VideoCard from './VideoCard';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nfunction Results({selectedOption}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            const request = await axios.get(selectedOption);\r\n            console.log(request);\r\n            setMovies(request.data.results)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [selectedOption])\r\n    return (\r\n        <div className=\"results\">\r\n        \r\n        <FlipMove>\r\n        {movies.map((movie) => (\r\n        <VideoCard key={movie.id} movie={movie} />       \r\n        ))}\r\n        </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Results;\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport Nav from \"./Nav\";\nimport Results from './Results';\nimport requests from \"./requests\";\n\n\n\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState(requests.fetchTrending);\n\n  return (\n    <div className=\"app\">\n      \n      <Header />\n\n      <Nav setSelectedOption={setSelectedOption} />\n      \n      <Results selectedOption={selectedOption} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}